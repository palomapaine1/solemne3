# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k0fIl6AsDlfP7jvP5XyYYPHWhimSvFwA
"""

import streamlit as st
import pandas as pd
import requests
import streamlit as st
import pandas as pd
import requests

# Función para obtener datos de una API
def obtener_datos_api(api_url):
    response = requests.get(api_url)
    if response.status_code == 200:
        data = response.json()
        return pd.DataFrame(data)
    else:
        st.error(f"Error al obtener los datos de la API: {response.status_code}")
        return None
# Título de la aplicación
st.title("Interacción con Datos - Streamlit")
# Cargar un archivo
st.subheader("Cargar archivo")
uploaded_file = st.file_uploader("Sube un archivo CSV o Excel", type=["csv", "xlsx"])

# Si se carga un archivo
if uploaded_file:
    # Determinar tipo de archivo y leer datos
    if uploaded_file.name.endswith(".csv"):
        data = pd.read_csv(uploaded_file)
    elif uploaded_file.name.endswith(".xlsx"):
        data = pd.read_excel(uploaded_file)

    # Mostrar opciones para interactuar
    st.subheader("Opciones para interactuar con los datos")

    # Seleccionar una columna
    selected_column = st.selectbox("Selecciona una columna para visualizar", data.columns)

    # Mostrar datos de la columna seleccionada
    st.write("Datos de la columna seleccionada:")
    st.write(data[selected_column])

    # Filtrar datos con un slider si es una columna numérica
    if pd.api.types.is_numeric_dtype(data[selected_column]):
        min_val = int(data[selected_column].min())
        max_val = int(data[selected_column].max())
        slider_range = st.slider("Selecciona un rango", min_val, max_val, (min_val, max_val))
        filtered_data = data[(data[selected_column] >= slider_range[0]) & (data[selected_column] <= slider_range[1])]
        st.write("Datos filtrados:")
        st.write(filtered_data)
    else:
        st.write("La columna seleccionada no es numérica, por lo que no se puede filtrar.")

    # Botón para mostrar todos los datos
    if st.button("Mostrar datos originales"):
        st.subheader("Datos originales:")
        st.write(data)
else:
    st.write("Por favor, sube un archivo para comenzar.")






